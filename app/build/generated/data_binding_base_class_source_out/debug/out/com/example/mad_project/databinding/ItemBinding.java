// Generated by view binder compiler. Do not edit!
package com.example.mad_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mad_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView categoryCard;

  @NonNull
  public final TextView detailedReview;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView itemNameCard;

  @NonNull
  public final CardView parentLayout;

  @NonNull
  public final TextView ratingReview;

  private ItemBinding(@NonNull CardView rootView, @NonNull TextView categoryCard,
      @NonNull TextView detailedReview, @NonNull ImageView itemImage,
      @NonNull TextView itemNameCard, @NonNull CardView parentLayout,
      @NonNull TextView ratingReview) {
    this.rootView = rootView;
    this.categoryCard = categoryCard;
    this.detailedReview = detailedReview;
    this.itemImage = itemImage;
    this.itemNameCard = itemNameCard;
    this.parentLayout = parentLayout;
    this.ratingReview = ratingReview;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryCard;
      TextView categoryCard = ViewBindings.findChildViewById(rootView, id);
      if (categoryCard == null) {
        break missingId;
      }

      id = R.id.detailedReview;
      TextView detailedReview = ViewBindings.findChildViewById(rootView, id);
      if (detailedReview == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = ViewBindings.findChildViewById(rootView, id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.itemNameCard;
      TextView itemNameCard = ViewBindings.findChildViewById(rootView, id);
      if (itemNameCard == null) {
        break missingId;
      }

      CardView parentLayout = (CardView) rootView;

      id = R.id.ratingReview;
      TextView ratingReview = ViewBindings.findChildViewById(rootView, id);
      if (ratingReview == null) {
        break missingId;
      }

      return new ItemBinding((CardView) rootView, categoryCard, detailedReview, itemImage,
          itemNameCard, parentLayout, ratingReview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
