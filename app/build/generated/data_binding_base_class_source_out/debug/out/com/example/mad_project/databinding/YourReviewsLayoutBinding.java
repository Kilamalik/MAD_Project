// Generated by view binder compiler. Do not edit!
package com.example.mad_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mad_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class YourReviewsLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView categoryCard;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final Button editButton;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView itemNameCard;

  @NonNull
  public final CardView parentLayout;

  @NonNull
  public final TextView yourDetailedReview;

  @NonNull
  public final TextView yourOneWord;

  @NonNull
  public final TextView yourReviewRating;

  private YourReviewsLayoutBinding(@NonNull CardView rootView, @NonNull TextView categoryCard,
      @NonNull ImageButton deleteButton, @NonNull Button editButton, @NonNull ImageView itemImage,
      @NonNull TextView itemNameCard, @NonNull CardView parentLayout,
      @NonNull TextView yourDetailedReview, @NonNull TextView yourOneWord,
      @NonNull TextView yourReviewRating) {
    this.rootView = rootView;
    this.categoryCard = categoryCard;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.itemImage = itemImage;
    this.itemNameCard = itemNameCard;
    this.parentLayout = parentLayout;
    this.yourDetailedReview = yourDetailedReview;
    this.yourOneWord = yourOneWord;
    this.yourReviewRating = yourReviewRating;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static YourReviewsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static YourReviewsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.your_reviews_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static YourReviewsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryCard;
      TextView categoryCard = ViewBindings.findChildViewById(rootView, id);
      if (categoryCard == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = ViewBindings.findChildViewById(rootView, id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.itemNameCard;
      TextView itemNameCard = ViewBindings.findChildViewById(rootView, id);
      if (itemNameCard == null) {
        break missingId;
      }

      CardView parentLayout = (CardView) rootView;

      id = R.id.yourDetailedReview;
      TextView yourDetailedReview = ViewBindings.findChildViewById(rootView, id);
      if (yourDetailedReview == null) {
        break missingId;
      }

      id = R.id.yourOneWord;
      TextView yourOneWord = ViewBindings.findChildViewById(rootView, id);
      if (yourOneWord == null) {
        break missingId;
      }

      id = R.id.yourReviewRating;
      TextView yourReviewRating = ViewBindings.findChildViewById(rootView, id);
      if (yourReviewRating == null) {
        break missingId;
      }

      return new YourReviewsLayoutBinding((CardView) rootView, categoryCard, deleteButton,
          editButton, itemImage, itemNameCard, parentLayout, yourDetailedReview, yourOneWord,
          yourReviewRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
